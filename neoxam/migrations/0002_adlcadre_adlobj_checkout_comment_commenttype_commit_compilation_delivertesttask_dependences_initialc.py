# Generated by Django 3.2.18 on 2023-04-02 17:22

import _socket
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('neoxam', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdlCadre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True)),
                ('adlobj_id', models.IntegerField(blank=True, null=True)),
                ('uptodate', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'adl_cadre',
            },
        ),
        migrations.CreateModel(
            name='AdlObj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('local', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=256)),
                ('ext', models.CharField(max_length=16)),
                ('vmsdate', models.DateTimeField(blank=True, null=True)),
                ('svndate', models.DateTimeField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=256, null=True)),
                ('user', models.CharField(blank=True, max_length=256, null=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('sent', models.IntegerField(blank=True, null=True)),
                ('frame', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'adl_obj',
            },
        ),
        migrations.CreateModel(
            name='CommentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=1024)),
                ('deftype', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment_type',
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.PositiveIntegerField(unique=True)),
                ('path', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('commit_date', models.DateTimeField()),
                ('data', jsonfield.fields.JSONField(default=dict)),
            ],
            options={
                'get_latest_by': 'revision',
            },
        ),
        migrations.CreateModel(
            name='DeliverTestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('schema_version', models.PositiveIntegerField()),
                ('procedure_name', models.CharField(max_length=255)),
                ('procedure_test_name', models.CharField(max_length=255)),
                ('state', models.CharField(choices=[('compiling', 'Compiling'), ('success', 'Success'), ('failed', 'Failed')], default='compiling', max_length=32)),
                ('output', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dependences',
            fields=[
                ('adl_cadre_id', models.IntegerField()),
                ('adl_obj_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'dependences',
            },
        ),
        migrations.CreateModel(
            name='InitialCommitRecord',
            fields=[
                ('adlobj_id', models.IntegerField(primary_key=True, serialize=False)),
                ('initial_commit', models.BooleanField()),
                ('version', models.IntegerField()),
                ('svndate', models.DateTimeField(blank=True, null=True)),
                ('user', models.CharField(blank=True, max_length=256, null=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('svn_path', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'language',
            },
        ),
        migrations.CreateModel(
            name='Lock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('data', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Oversee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('total', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oversee',
            },
        ),
        migrations.CreateModel(
            name='PatchRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('version', models.CharField(max_length=32)),
                ('path', models.CharField(max_length=256)),
                ('status', models.BooleanField()),
                ('ip', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(choices=[(710, 'gp710'), (2006, 'gp2006'), (2009, 'gp2009')])),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'unique_together': {('version', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Runtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=32)),
                ('enabled', models.BooleanField(default=False)),
                ('release_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('opt', models.CharField(max_length=256)),
                ('fast', models.IntegerField()),
                ('bin', models.IntegerField()),
                ('listing', models.IntegerField()),
                ('start', models.DateTimeField()),
                ('stop', models.DateTimeField()),
                ('alpha', models.FloatField(blank=True, null=True)),
                ('compiled', models.IntegerField()),
                ('error', models.IntegerField()),
                ('cause', models.CharField(blank=True, max_length=4096, null=True)),
                ('i18n', models.FloatField(blank=True, null=True)),
                ('cuts', models.FloatField(blank=True, null=True)),
                ('gui', models.FloatField(blank=True, null=True)),
                ('klass', models.FloatField(blank=True, null=True)),
                ('ftp_count', models.IntegerField(blank=True, null=True)),
                ('ftp_elapsed', models.FloatField(blank=True, null=True)),
                ('ftp_size', models.FloatField(blank=True, null=True)),
                ('delia_count', models.IntegerField(blank=True, null=True)),
                ('delia_elapsed', models.FloatField(blank=True, null=True)),
                ('delia_size', models.FloatField(blank=True, null=True)),
                ('tree_count', models.IntegerField(blank=True, null=True)),
                ('tree_elapsed', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic',
            },
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('action', models.CharField(max_length=255)),
                ('schema_version', models.PositiveIntegerField()),
                ('procedure_name', models.CharField(max_length=255)),
                ('success', models.BooleanField()),
                ('data', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1024)),
                ('status', models.CharField(max_length=1)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('comment_id', models.IntegerField(blank=True, null=True)),
                ('language_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'translation',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=256)),
                ('role', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='wUser',
            fields=[
                ('user_name', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('ip_address', models.CharField(max_length=15)),
                ('port_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32, unique=True)),
                ('scm', models.CharField(choices=[('svn', 'Subversion')], default='svn', max_length=16)),
                ('url', models.URLField()),
                ('timeout', models.PositiveIntegerField()),
            ],
            options={
                'unique_together': {('scm', 'url')},
            },
        ),
        migrations.CreateModel(
            name='Compilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(blank=True, null=True)),
                ('maxrev', models.IntegerField(blank=True, null=True)),
                ('r_maxrev', models.IntegerField(blank=True, null=True)),
                ('adlobj', models.ForeignKey(blank=True, db_column='adlobj_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='neoxam.adlobj')),
            ],
            options={
                'db_table': 'compilation',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technical_comment', models.CharField(max_length=1024)),
                ('functional_comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('reference', models.CharField(blank=True, max_length=1024, null=True)),
                ('type_object', models.CharField(blank=True, max_length=256, null=True)),
                ('external_id', models.CharField(blank=True, max_length=256, null=True)),
                ('user', models.CharField(max_length=256)),
                ('is_user_doc', models.CharField(blank=True, max_length=1, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('adlobj', models.OneToOneField(db_column='adlobj_id', on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='neoxam.adlobj')),
                ('comment_type', models.ForeignKey(db_column='ctype_id', on_delete=django.db.models.deletion.CASCADE, to='neoxam.commenttype')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(default=_socket.gethostname, max_length=64)),
                ('in_use', models.BooleanField(default=False)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkouts', to='neoxam.repository')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_version', models.CharField(max_length=32)),
                ('to_version', models.CharField(max_length=32)),
                ('backported', models.BooleanField()),
                ('commit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='backport_record', to='neoxam.commit')),
            ],
            options={
                'unique_together': {('commit', 'from_version', 'to_version')},
            },
        ),
        migrations.CreateModel(
            name='ProcedureVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', jsonfield.fields.JSONField(default=dict)),
                ('head', models.BooleanField(default=True)),
                ('analyzed', models.BooleanField(default=True)),
                ('magnum_compiled', models.BooleanField(default=False)),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedure_versions', to='neoxam.commit')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedure_versions', to='neoxam.procedure')),
            ],
            options={
                'unique_together': {('procedure', 'commit')},
            },
        ),
    ]
